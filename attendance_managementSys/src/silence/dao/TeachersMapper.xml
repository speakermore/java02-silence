<?xml version="1.0" encoding="UTF-8" ?>
<!-- DOCTYPE很重要，不能省略 -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="silence.dao.TeachersMapper">
	<insert id="reg" parameterType="Students">
		<!-- insert into 表名（列名列表） values（值列表）
		1.列名列表与值列表必须一一对应
		2.如果表字段全填充，则可省略，此时值列表必须与数据库字段列表一一对应
		3.#{属性名}是OGNL表达式，它自动匹配实体对象的属性 -->
		insert into students(stuNo,stuName,stuPwd,classId,stuIntegrals,stuGender) values(#{stuNo},#{stuName},#{stuPwd},#{classId},#{integrals},#{stuGender})
	</insert>
	
	<select id="getTeacherByName" resultType="Teacher">
		select * from teachers
		where tecName=#{tecName}
	</select>
	
	<select id="getTecById" resultType="Teacher">
		select * from teachers
		where id=#{id}
	</select>
	
	<insert id="tecUpdatePwd">
		update teachers set tecPwd=#{newPwd} where id=#{id}
	</insert>
	
	<select id="verifyStuExist" resultType="Students">
		select * from students
		where classId=#{id} and stuNo=#{stuNo}
	</select>
	
	<select id="lookAttendanceRecord" resultType="attendanceRecord">
		select s.stuNo,s.stuName,c.className,ar.attendanceComeTime,ar.attendanceBackTime 
		from attendance_record ar join students s on ar.stuId=s.id 
        join classes c on s.classId=c.id 
        <where>
	        <if test="attendanceTime1!=null and attendanceTime2!=null">
	        	and ar.attendanceComeTime between #{attendanceTime1} and #{attendanceTime2}
	        </if>
	        <if test="id!=0">
	        	and c.id=#{id}
	        </if>
	        <if test="stuNo!=null and stuNo!=''">
	        	and s.stuNo=#{stuNo}
	        </if>
	        <if test="stuName!=null and stuName!=''">
	        	and s.stuName like CONCAT(CONCAT('%', #{stuName}),'%')
	        </if>
        </where>
		order by s.stuNo asc 
	</select>
</mapper>